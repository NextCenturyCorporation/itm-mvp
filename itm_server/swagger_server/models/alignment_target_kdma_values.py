# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class AlignmentTargetKdmaValues(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, kdma: str=None, value: float=None):  # noqa: E501
        """AlignmentTargetKdmaValues - a model defined in Swagger

        :param kdma: The kdma of this AlignmentTargetKdmaValues.  # noqa: E501
        :type kdma: str
        :param value: The value of this AlignmentTargetKdmaValues.  # noqa: E501
        :type value: float
        """
        self.swagger_types = {
            'kdma': str,
            'value': float
        }

        self.attribute_map = {
            'kdma': 'kdma',
            'value': 'value'
        }
        self._kdma = kdma
        self._value = value

    @classmethod
    def from_dict(cls, dikt) -> 'AlignmentTargetKdmaValues':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AlignmentTarget_kdma_values of this AlignmentTargetKdmaValues.  # noqa: E501
        :rtype: AlignmentTargetKdmaValues
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kdma(self) -> str:
        """Gets the kdma of this AlignmentTargetKdmaValues.

        KDMA name  # noqa: E501

        :return: The kdma of this AlignmentTargetKdmaValues.
        :rtype: str
        """
        return self._kdma

    @kdma.setter
    def kdma(self, kdma: str):
        """Sets the kdma of this AlignmentTargetKdmaValues.

        KDMA name  # noqa: E501

        :param kdma: The kdma of this AlignmentTargetKdmaValues.
        :type kdma: str
        """
        if kdma is None:
            raise ValueError("Invalid value for `kdma`, must not be `None`")  # noqa: E501

        self._kdma = kdma

    @property
    def value(self) -> float:
        """Gets the value of this AlignmentTargetKdmaValues.

        target alignment value  # noqa: E501

        :return: The value of this AlignmentTargetKdmaValues.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value: float):
        """Sets the value of this AlignmentTargetKdmaValues.

        target alignment value  # noqa: E501

        :param value: The value of this AlignmentTargetKdmaValues.
        :type value: float
        """
        if value is None:
            raise ValueError("Invalid value for `value`, must not be `None`")  # noqa: E501

        self._value = value
