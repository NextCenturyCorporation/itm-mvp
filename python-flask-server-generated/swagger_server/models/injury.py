# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Injury(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, name: str=None, location: str=None, severity: float=None):  # noqa: E501
        """Injury - a model defined in Swagger

        :param name: The name of this Injury.  # noqa: E501
        :type name: str
        :param location: The location of this Injury.  # noqa: E501
        :type location: str
        :param severity: The severity of this Injury.  # noqa: E501
        :type severity: float
        """
        self.swagger_types = {
            'name': str,
            'location': str,
            'severity': float
        }

        self.attribute_map = {
            'name': 'name',
            'location': 'location',
            'severity': 'severity'
        }
        self._name = name
        self._location = location
        self._severity = severity

    @classmethod
    def from_dict(cls, dikt) -> 'Injury':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Injury of this Injury.  # noqa: E501
        :rtype: Injury
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this Injury.

        a brief label for the injury  # noqa: E501

        :return: The name of this Injury.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Injury.

        a brief label for the injury  # noqa: E501

        :param name: The name of this Injury.
        :type name: str
        """

        self._name = name

    @property
    def location(self) -> str:
        """Gets the location of this Injury.

        the injury location on the casualty's body  # noqa: E501

        :return: The location of this Injury.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location: str):
        """Sets the location of this Injury.

        the injury location on the casualty's body  # noqa: E501

        :param location: The location of this Injury.
        :type location: str
        """

        self._location = location

    @property
    def severity(self) -> float:
        """Gets the severity of this Injury.

        the apparent severity of the injury from 0 (low) to 1.0 (high)  # noqa: E501

        :return: The severity of this Injury.
        :rtype: float
        """
        return self._severity

    @severity.setter
    def severity(self, severity: float):
        """Sets the severity of this Injury.

        the apparent severity of the injury from 0 (low) to 1.0 (high)  # noqa: E501

        :param severity: The severity of this Injury.
        :type severity: float
        """

        self._severity = severity
